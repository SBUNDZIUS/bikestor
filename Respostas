Construir as seguintes consultas:

Listar todos Clientes que não tenham realizado uma compra;

SELECT C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME, C.EMAIL, C.PHONE, C.CITY, C.STATE 
FROM CUSTOMERS C
LEFT JOIN
ORDERS O ON C.CUSTOMERS.ID = O.CUSTOMER_ID
WHERE O.ORDER_ID IS NULL;

Listar os Produtos que não tenham sido comprados

SELECT P.PRODUCT_ID, P.PRODUCT_NAME, P.LIST_PRICE, C.CATEGORY_NAME
FROM PRODUCTS P
LEFT JOIN
ORDERS_ITEMS OI ON P.PRODUCT_ID = OI.PRODUCT_ID
LEFT JOIN
CATEGORIES C ON P.CATEGORY_ID = C.CATEGORY_ID
WHERE OI.PRODUCT_ID IS NULL

Listar os Produtos sem Estoque;
SELECT P.PRODUCT_ID, P.PRODUCT_NAME, P.LIST_PRICE, C.CATEGORY_NAME
FROM PRODUCTS P
LEFT JOIN
STOCKS S ON P.PRODUCT_ID = S.PRODUCT_ID
LEFT JOIN
CATEGORIES C ON P.CATEGORY_ID = C.CATEGORY_ID
GROUP BY P.PRODUC_ID, P.PRODUCT_NAME, P.LIST_PRICE, C.CATEGORY_NAME
HAVING SUM(NVL(S.QUANTITY,0)) =0;

Agrupar a quantidade de vendas que uma determinada Marca por Loja.

SELECT P.BRAND_ID, O.STORE_ID, SUM(OI.QUANTITY) AS TOTAL_VEN
FROM ORDERS_ITEMS OI
JOIN PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
JOIN ORDERS O ON OI.OERDER_ID = O.ORDER_ID
GROUP BY P.BRAND_ID, O.STORE_ID
ORDER BY P.BRAND_ID, O.STORE_ID;

Listar os Funcionarios que não estejam relacionados a um Pedido.
SELECT S.STAFF_ID, S.FIRST_NAME, S.LAST_NAME, S.EMAIL, S.PHONE
FROM STAFFS S
LEFT JOIN ORDERS O ON S.STAFF_ID = O.STAFF_ID
WHERE O.ORDER_ID IS NULL;

